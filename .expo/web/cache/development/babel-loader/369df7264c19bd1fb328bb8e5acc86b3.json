{"ast":null,"code":"import * as React from 'react';\nimport createElement from \"../createElement\";\nimport * as forwardedProps from \"../../modules/forwardedProps\";\nimport pick from \"../../modules/pick\";\nimport useElementLayout from \"../../modules/useElementLayout\";\nimport useLayoutEffect from \"../../modules/useLayoutEffect\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePlatformMethods from \"../../modules/usePlatformMethods\";\nimport useResponderEvents from \"../../modules/useResponderEvents\";\nimport { getLocaleDirection, useLocaleContext } from \"../../modules/useLocale\";\nimport StyleSheet from \"../StyleSheet\";\nimport TextInputState from \"../../modules/TextInputState\";\nimport { warnOnce } from \"../../modules/warnOnce\";\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar focusTimeout = null;\nvar TextInput = React.forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      enterKeyHint = props.enterKeyHint,\n      inputMode = props.inputMode,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      readOnly = props.readOnly,\n      returnKeyType = props.returnKeyType,\n      rows = props.rows,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n\n  var _inputMode;\n\n  if (inputMode != null) {\n    _inputMode = inputMode;\n\n    if (inputMode === 'email') {\n      type = 'email';\n    } else if (inputMode === 'tel') {\n      type = 'tel';\n    } else if (inputMode === 'search') {\n      type = 'search';\n    } else if (inputMode === 'url') {\n      type = 'url';\n    } else {\n      type = 'text';\n    }\n  } else if (keyboardType != null) {\n    warnOnce('keyboardType', 'keyboardType is deprecated. Use inputMode.');\n\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n\n      case 'number-pad':\n      case 'numeric':\n        _inputMode = 'numeric';\n        break;\n\n      case 'decimal-pad':\n        _inputMode = 'decimal';\n        break;\n\n      case 'phone-pad':\n        type = 'tel';\n        break;\n\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n\n      case 'url':\n        type = 'url';\n        break;\n\n      default:\n        type = 'text';\n    }\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(function (hostNode) {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange(hostNode);\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var hostNode = e.target;\n\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n\n        focusTimeout = setTimeout(function () {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    var hostNode = e.target;\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostNode != null) {\n        setTimeout(function () {\n          return hostNode.blur();\n        }, 0);\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n\n  var _useLocaleContext = useLocaleContext(),\n      contextDirection = _useLocaleContext.direction;\n\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n\n  if (returnKeyType != null) {\n    warnOnce('returnKeyType', 'returnKeyType is deprecated. Use enterKeyHint.');\n  }\n\n  supportedProps.enterKeyHint = enterKeyHint || returnKeyType;\n  supportedProps.inputMode = _inputMode;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n\n  if (editable != null) {\n    warnOnce('editable', 'editable is deprecated. Use readOnly.');\n  }\n\n  supportedProps.readOnly = readOnly || !editable;\n\n  if (numberOfLines != null) {\n    warnOnce('numberOfLines', 'TextInput numberOfLines is deprecated. Use rows.');\n  }\n\n  supportedProps.rows = multiline ? rows != null ? rows : numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = [{\n    '--placeholderTextColor': placeholderTextColor\n  }, styles.textinput$raw, styles.placeholder, props.style];\n  supportedProps.type = multiline ? undefined : type;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var element = createElement(component, supportedProps, {\n    writingDirection: writingDirection\n  });\n  return element;\n});\nTextInput.displayName = 'TextInput';\nTextInput.State = TextInputState;\nvar styles = StyleSheet.create({\n  textinput$raw: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  },\n  placeholder: {\n    placeholderTextColor: 'var(--placeholderTextColor)'\n  }\n});\nexport default TextInput;","map":{"version":3,"names":["React","createElement","forwardedProps","pick","useElementLayout","useLayoutEffect","useMergeRefs","usePlatformMethods","useResponderEvents","getLocaleDirection","useLocaleContext","StyleSheet","TextInputState","warnOnce","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","e","forwardPropsList","Object","assign","defaultProps","accessibilityProps","clickProps","focusProps","keyboardProps","mouseProps","touchProps","styleProps","autoCapitalize","autoComplete","autoCorrect","autoFocus","defaultValue","disabled","lang","maxLength","onChange","onScroll","placeholder","pointerEvents","readOnly","rows","spellCheck","value","type","pickProps","props","isEventComposing","nativeEvent","isComposing","keyCode","focusTimeout","TextInput","forwardRef","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","dir","_props$editable","editable","enterKeyHint","inputMode","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onBlur","onChangeText","onContentSizeChange","onFocus","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","_inputMode","dimensions","useRef","height","width","hostRef","handleContentSizeChange","useCallback","hostNode","newHeight","scrollHeight","newWidth","scrollWidth","current","contentSize","imperativeRef","useMemo","clear","isFocused","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","target","handleChange","handleFocus","clearTimeout","setTimeout","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","key","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","document","activeElement","component","_useLocaleContext","contextDirection","direction","supportedProps","undefined","onKeyDown","onSelect","style","styles","textinput$raw","platformMethodsRef","setRef","ref","langDirection","componentDirection","writingDirection","element","displayName","State","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize"],"sources":["/Users/Danny/Desktop/Computer/UpWork/Michaias/Zillow/zillow-app/node_modules/react-native-web/dist/exports/TextInput/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useLayoutEffect from '../../modules/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport { getLocaleDirection, useLocaleContext } from '../../modules/useLocale';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\nimport { warnOnce } from '../../modules/warnOnce';\n\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\nvar isSelectionStale = (node, selection) => {\n  var selectionEnd = node.selectionEnd,\n    selectionStart = node.selectionStart;\n  var start = selection.start,\n    end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\nvar setSelection = (node, selection) => {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n      end = selection.end;\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\nvar pickProps = props => pick(props, forwardPropsList);\n\n// If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\nvar focusTimeout = null;\nvar TextInput = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var _props$autoCapitalize = props.autoCapitalize,\n    autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n    autoComplete = props.autoComplete,\n    autoCompleteType = props.autoCompleteType,\n    _props$autoCorrect = props.autoCorrect,\n    autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n    blurOnSubmit = props.blurOnSubmit,\n    clearTextOnFocus = props.clearTextOnFocus,\n    dir = props.dir,\n    _props$editable = props.editable,\n    editable = _props$editable === void 0 ? true : _props$editable,\n    enterKeyHint = props.enterKeyHint,\n    inputMode = props.inputMode,\n    _props$keyboardType = props.keyboardType,\n    keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n    _props$multiline = props.multiline,\n    multiline = _props$multiline === void 0 ? false : _props$multiline,\n    _props$numberOfLines = props.numberOfLines,\n    numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    onChangeText = props.onChangeText,\n    onContentSizeChange = props.onContentSizeChange,\n    onFocus = props.onFocus,\n    onKeyPress = props.onKeyPress,\n    onLayout = props.onLayout,\n    onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n    onResponderEnd = props.onResponderEnd,\n    onResponderGrant = props.onResponderGrant,\n    onResponderMove = props.onResponderMove,\n    onResponderReject = props.onResponderReject,\n    onResponderRelease = props.onResponderRelease,\n    onResponderStart = props.onResponderStart,\n    onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n    onSelectionChange = props.onSelectionChange,\n    onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n    onSubmitEditing = props.onSubmitEditing,\n    placeholderTextColor = props.placeholderTextColor,\n    readOnly = props.readOnly,\n    returnKeyType = props.returnKeyType,\n    rows = props.rows,\n    _props$secureTextEntr = props.secureTextEntry,\n    secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n    selection = props.selection,\n    selectTextOnFocus = props.selectTextOnFocus,\n    spellCheck = props.spellCheck;\n  var type;\n  var _inputMode;\n  if (inputMode != null) {\n    _inputMode = inputMode;\n    if (inputMode === 'email') {\n      type = 'email';\n    } else if (inputMode === 'tel') {\n      type = 'tel';\n    } else if (inputMode === 'search') {\n      type = 'search';\n    } else if (inputMode === 'url') {\n      type = 'url';\n    } else {\n      type = 'text';\n    }\n  } else if (keyboardType != null) {\n    warnOnce('keyboardType', 'keyboardType is deprecated. Use inputMode.');\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n      case 'number-pad':\n      case 'numeric':\n        _inputMode = 'numeric';\n        break;\n      case 'decimal-pad':\n        _inputMode = 'decimal';\n        break;\n      case 'phone-pad':\n        type = 'tel';\n        break;\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n      case 'url':\n        type = 'url';\n        break;\n      default:\n        type = 'text';\n    }\n  }\n  if (secureTextEntry) {\n    type = 'password';\n  }\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(hostNode => {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(() => hostNode => {\n    // TextInput needs to add more methods to the hostNode in addition to those\n    // added by `usePlatformMethods`. This is temporarily until an API like\n    // `TextInput.clear(hostRef)` is added to React Native.\n    if (hostNode != null) {\n      hostNode.clear = function () {\n        if (hostNode != null) {\n          hostNode.value = '';\n        }\n      };\n      hostNode.isFocused = function () {\n        return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n      };\n      handleContentSizeChange(hostNode);\n    }\n  }, [handleContentSizeChange]);\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n    if (onChange) {\n      onChange(e);\n    }\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n  function handleFocus(e) {\n    var hostNode = e.target;\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n      if (selectTextOnFocus) {\n        // Safari requires selection to occur in a setTimeout\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n        focusTimeout = setTimeout(() => {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n  function handleKeyDown(e) {\n    var hostNode = e.target;\n    // Prevent key events bubbling (see #612)\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n    if (e.key === 'Enter' && !e.shiftKey &&\n    // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n      if (shouldBlurOnSubmit && hostNode != null) {\n        setTimeout(() => hostNode.blur(), 0);\n      }\n    }\n  }\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n          selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n  useLayoutEffect(() => {\n    var node = hostRef.current;\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture\n  });\n  var _useLocaleContext = useLocaleContext(),\n    contextDirection = _useLocaleContext.direction;\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  // 'auto' by default allows browsers to infer writing direction\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  if (returnKeyType != null) {\n    warnOnce('returnKeyType', 'returnKeyType is deprecated. Use enterKeyHint.');\n  }\n  supportedProps.enterKeyHint = enterKeyHint || returnKeyType;\n  supportedProps.inputMode = _inputMode;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  if (editable != null) {\n    warnOnce('editable', 'editable is deprecated. Use readOnly.');\n  }\n  supportedProps.readOnly = readOnly || !editable;\n  if (numberOfLines != null) {\n    warnOnce('numberOfLines', 'TextInput numberOfLines is deprecated. Use rows.');\n  }\n  supportedProps.rows = multiline ? rows != null ? rows : numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = [{\n    '--placeholderTextColor': placeholderTextColor\n  }, styles.textinput$raw, styles.placeholder, props.style];\n  supportedProps.type = multiline ? undefined : type;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var element = createElement(component, supportedProps, {\n    writingDirection\n  });\n  return element;\n});\nTextInput.displayName = 'TextInput';\n// $FlowFixMe\nTextInput.State = TextInputState;\nvar styles = StyleSheet.create({\n  textinput$raw: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  },\n  placeholder: {\n    placeholderTextColor: 'var(--placeholderTextColor)'\n  }\n});\nexport default TextInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}